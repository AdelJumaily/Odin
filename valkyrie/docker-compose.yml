version: "3.9"
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: valkyrie
      POSTGRES_USER: valkyrie
      POSTGRES_PASSWORD: valkyrie
    ports:
      - "${POSTGRES_HOST_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U valkyrie"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-init:
    image: postgres:15
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: ["until pg_isready -h postgres -U valkyrie; do sleep 1; done; psql -h postgres -U valkyrie -d valkyrie -c \"CREATE EXTENSION IF NOT EXISTS vector;\"; sleep 1"]
    environment:
      PGPASSWORD: valkyrie
    restart: 'no'

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    volumes:
      - redis_data:/data

  neo4j:
    image: neo4j:5
    environment:
      NEO4J_AUTH: neo4j/neo4jpassword
    ports:
      - "${NEO4J_HTTP_HOST_PORT:-7474}:7474"
      - "${NEO4J_BOLT_HOST_PORT:-7687}:7687"
    volumes:
      - neo4j_data:/data

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "${MAILPIT_HTTP_HOST_PORT:-8025}:8025"
      - "${MAILPIT_SMTP_HOST_PORT:-1025}:1025"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "backend.app.main:app", "--host", "0.0.0.0", "--port", "6789"]
    env_file:
      - ./.env
    environment:
      VALKYRIE_DATABASE_URL: postgresql+psycopg://valkyrie:valkyrie@postgres:5432/valkyrie
      VALKYRIE_REDIS_URL: redis://redis:6379/0
      VALKYRIE_NEO4J_URL: bolt://neo4j:7687
      VALKYRIE_NEO4J_USER: neo4j
      VALKYRIE_NEO4J_PASSWORD: neo4jpassword
      VALKYRIE_STORAGE_PATH: /var/lib/valkyrie/uploads
    depends_on:
      - db-init
      - redis
    volumes:
      - uploads:/var/lib/valkyrie/uploads
    ports:
      - "${API_HOST_PORT:-6789}:6789"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "-m", "rq", "worker", "ingest"]
    env_file:
      - ./.env
    environment:
      VALKYRIE_DATABASE_URL: postgresql+psycopg://valkyrie:valkyrie@postgres:5432/valkyrie
      VALKYRIE_REDIS_URL: redis://redis:6379/0
      VALKYRIE_NEO4J_URL: bolt://neo4j:7687
      VALKYRIE_NEO4J_USER: neo4j
      VALKYRIE_NEO4J_PASSWORD: neo4jpassword
      VALKYRIE_STORAGE_PATH: /var/lib/valkyrie/uploads
    depends_on:
      - api
    volumes:
      - uploads:/var/lib/valkyrie/uploads

  caddy:
    image: caddy:2
    ports:
      - "${HTTPS_HOST_PORT:-443}:443"
      - "${HTTP_HOST_PORT:-80}:80"
    volumes:
      - ./configs/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - api

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "${FRONTEND_HOST_PORT:-3000}:80"
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  uploads:
  caddy_data:
  caddy_config:
